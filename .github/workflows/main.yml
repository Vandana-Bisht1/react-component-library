name: Test, Build and Publish

on:
  push:
    branches:
      - main  # Adjust branch name as needed

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19.3.0'  # Replace with the version of Node.js you are using

      - name: Install dependencies
        run: npm install

      - name: Run tests with Jest
        run: npm test  # Replace with your test script command  
 
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check_version.outputs.version_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19.3.0'

      - name: Cache package.json
        id: cache-package
        uses: actions/cache@v3
        with:
          path: package.json
          key: package-json-${{ github.sha }}
          restore-keys: |
            package-json-

      - name: Get previous version
        id: get_previous_version
        run: |
          if [ -f ${{ steps.cache-package.outputs.cache-hit }} ]; then
            PREVIOUS_VERSION=$(jq -r .version package.json)
          else
            PREVIOUS_VERSION="0.0.0"
          fi
          echo "::set-output name=previous_version::$PREVIOUS_VERSION"

      - name: Get current version
        id: get_current_version
        run: echo "::set-output name=current_version::$(jq -r .version package.json)"

      - name: Check if version changed
        id: check_version
        run: |
          CURRENT_VERSION=${{ steps.get_current_version.outputs.current_version }}
          PREVIOUS_VERSION=${{ steps.get_previous_version.outputs.previous_version }}
          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "::set-output name=version_changed::false"
          else
            echo "::set-output name=version_changed::true"
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 19.3.0
      - name: Install dependencies
        run: npm ci

      - name: Build library with Rollup
        run: npm run rollup 

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 19.3.0
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
    

  